+ cd simulations
+ python simulate.py --program linear_regression --sched 0 --no-sim 1000 --fault-interval 2 --graph-names star_graph_n4 --fault-prob 1.0 --simulation-type controlled_at_node_amit_v2 --controlled-at-node 0 --extra-kwargs config_file=matrix_1
Locating Graph: "star_graph_n4".
Analysis graph: star_graph_n4 | program: linear_regression | Simulation Type: controlled_at_node_amit_v2, Args: [0] | No. of Simulations: 1000 | Scheduler: 0 | Mutual Exclusion: False | Fault Interval: 2
Doubly stochastic matrix validated!
/home/agaru/anaconda3/envs/cvf/lib/python3.13/site-packages/numpy/_core/fromnumeric.py:57: FutureWarning: 'DataFrame.swapaxes' is deprecated and will be removed in a future version. Please use 'DataFrame.transpose' instead.
  return bound(*args, **kwds)
Total configs: 194,481.
Simulation environment: No. of Simulations: 1000 | Scheduler: CENTRAL | ME: False
/home/agaru/research/cvf-python-gnn/cvf-analysis/v2/linear_regression.py:157: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  m = torch.tensor(new_m, requires_grad=True)
/home/agaru/research/cvf-python-gnn/cvf-analysis/v2/linear_regression.py:158: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  c = torch.tensor(new_c, requires_grad=True)
